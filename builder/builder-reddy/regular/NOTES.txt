Status: working 

Title: Design patterns in Golang — The Builder
URL: https://devcharmander.medium.com/design-patterns-in-golang-the-builder-dac468a71194

Builder pattern

The motivation behind the Builder pattern is to create a complex object piece-by-piece. 
Our goal in this blog is to provide APIs to create complex objects step-by-step.

Why?

Some objects are easy to create with a simple constructor while others need a lot of ceremonies.

When do we need this?

When you don’t need your end-user to provide millions of details in parameters of a constructor 
and you want to make his/her life easy by providing them with a simple way to create a complex object.

Builder facet
-------------

What?

They are more than one builder working in tandem to create an object.

Why?

Sometimes, our object is complex and the creational process requires more than one builder class. 
Segregating the builder into multiple builders also gives us control over the properties of a 
struct that a user can use.
